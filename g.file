/backend
├── controllers
│   ├── authController.js  (Handles registration, login, logout)
│   ├── tradeController.js (Handles trade logic)
│   ├── userController.js  (Handles profile)
│   ├── adminController.js (Handles admin-specific functions)
│   ├── supportController.js (Handles customer support)
│   ├── fundsController.js (Handles funds)
│   ├── kycController.js (Handles kyc)
│   ├── prices.js (Handles coin prices and charts)
├──uploads
│
├── models
│   ├── User.js
│   ├── Trade.js
│   ├── KYC.js
│   ├── SupportTicket.js
│   ├── Withdrawal.js
│
├── routes
│   ├── authRoutes.js
│   ├── tradeRoutes.js
│   ├── userRoutes.js
│   ├── adminRoutes.js
│   ├── supportRoutes.js
│   ├── kycRoutes.js
│   ├── pricesRoutes.js
│   ├── profileRoutes.js
│   ├── fundsRoutes.js

│
├── middlewares
│   ├── authMiddleware.js   (JWT token validation)
│   ├── roleMiddleware.js  (User role validation)
│   ├── fileUploadMiddleware.js
│
├── utils
│   ├── generateToken.js    (Fetch crypto prices)
│   ├── emailService.js     (Send emails for support or KYC)
│
├── config
│   ├── db.js               (Database connection)
│
└── index.js                  (Main app entry point)
4. Set Auto Trade Mode (Admin)
Endpoint: /api/admin/set-auto-mode
Method: POST
Headers:
Content-Type: application/json
Authorization: Bearer <your_admin_token>
Body:
json
Copy code
{
  "userId": "user12345",
  "autoMode": "alwaysWin"  // or "alwaysLose", "off"
}
5. Place Trade (Authenticated User)
Endpoint: /api/trade/place
Method: POST
Headers:
Content-Type: application/json
Authorization: Bearer <your_token>
Body:
json
Copy code
{
  "assetId": "bitcoin", // or other asset identifiers
  "amount": 100,
  "tradeType": "buy"  // or "sell"
}
6. Get Trade History (Authenticated User)
Endpoint: /api/trade/history
Method: GET
Headers:
Content-Type: application/json
Authorization: Bearer <your_token>
7. Cancel Trade (Authenticated User)
Endpoint: /api/trade/cancel/:tradeId

Method: DELETE

Headers:

Content-Type: application/json
Authorization: Bearer <your_token>
Note: Replace :tradeId with the actual trade ID in the URL.

8. Admin: Set Trade Outcome (Admin)
Endpoint: /api/admin/set-trade-outcome
Method: POST
Headers:
Content-Type: application/json
Authorization: Bearer <your_admin_token>
Body:
json
Copy code
{
  "tradeId": "trade12345",
  "outcome": "win" // or "lose"
}
